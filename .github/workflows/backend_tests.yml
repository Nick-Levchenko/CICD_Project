name: Python application

on: pull_request
env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB_AUTH: ${{ secrets.POSTGRES_DB_AUTH }}
  POSTGRES_DB_UNIVERSITY: ${{ secrets.POSTGRES_DB_UNIVERSITY }}
  AUTH_SERVICE_INTERNAL_URL: ${{ secrets.AUTH_SERVICE_INTERNAL_URL }}
  AUTH_SERVICE_API_URL: ${{ secrets.AUTH_SERVICE_API_URL }}
  UNIVERSITY_SERVICE_INTERNAL_URL: ${{ secrets.UNIVERSITY_SERVICE_INTERNAL_URL }}
  UNIVERSITY_SERVICE_API_URL: ${{ secrets.UNIVERSITY_SERVICE_API_URL }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install the latest version of ruff
        uses: astral-sh/ruff-action@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          sudo apt-get update
          python -m pip install --upgrade pip
          pip install -r requirments.txt
          
      - name: Run Docker Compose
        run: docker compose up -d

      - name: Pull Docker rep
        run: docker pull niklevchenko/api-tests:v2
        
      - name: Run test
        run: docker run -v ./allure_report:/app/allure_result --network host niklevchenko/api-tests:v2
          
      - name: Save allure result
        uses: actions/upload-artifact@v4
        with:
          name: allure-result
          path: 
            allure_report
          retention-days: 1

  get_allure_report:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - run: |
          curl -o allure-2.32.2.tgz -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.32.2/allure-commandline-2.32.2.tgz && \
          tar -zxvf allure-2.32.2.tgz -C /opt/ && \
          ln -s /opt/allure-2.32.2/bin/allure /usr/bin/allure && \
          rm allure-2.32.2.tgz
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-result -om _site
      - name: Store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path:
            _site
          retention-days: 1
  publish-report:
    runs-on: ubuntu-latest
    needs: get_allure_report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
      
